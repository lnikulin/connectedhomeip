From 1b925ed02948d98109a783bc208470e8d2c6f242 Mon Sep 17 00:00:00 2001
From: "sungmok.shin" <sungmok.shin@lge.com>
Date: Thu, 11 Nov 2021 09:26:24 +0900
Subject: [PATCH] Support syslog logging

:Release Notes:
Support syslog logging

:Detailed Notes:
This commit provides build option "enable_syslog=true/false"
to provide syslog logging along with stdout logging (AS-IS).
Enabling 'enable_syslog' flag will pass the CHIP SDK log to
syslog logging system. For webOS, now CHIP SDK log can been
collected on /var/log/legacy-log on webOS TV 6.0 (o20n).
Previous commit that supports pmlog for CHIP SDK is reverted
on this commit.

:Testing Performed:
Verified that build is successfully done.
Verified that CHIP SDK log is collected on /var/log/legacy-log
as follows when executing chip-tool-webos (ls2 initialization is
disabled for testing),

user.crit chip-tool-webos Read local id 0x000000000001B669, remote id 0x0000000000BC5C01
2020-01-01T01:21:35.664575Z [4896.448238260] user.crit chip-tool-webos Generating NOC
2020-01-01T01:21:35.676564Z [4896.460226420] kern.info kernel Detected VIPT I-cache on CPU3
2020-01-01T01:21:35.676760Z [4896.460413320] kern.info kernel CPU3: Booted secondary processor [412fd050]
2020-01-01T01:21:35.696489Z [4896.480150880] user.crit chip-tool-webos Generating ICAC
2020-01-01T01:21:35.741671Z [4896.525338440] user.err chip-tool-webos UDP::Init bind&listen port=5541
2020-01-01T01:21:35.741854Z [4896.525503040] user.err chip-tool-webos UDP::Init bind&listen port=5541
2020-01-01T01:21:35.741905Z [4896.525553020] user.err chip-tool-webos TransportMgr initialized
2020-01-01T01:21:35.741952Z [4896.525600280] user.err chip-tool-webos Init fabric pairing table with server storage
2020-01-01T01:21:35.742002Z [4896.525650320] user.crit chip-tool-webos Using ZAP configuration...
2020-01-01T01:21:35.742049Z [4896.525697240] user.crit chip-tool-webos deactivate report event

:QA Notes:

:Issues Addressed:
[WRN-8083] Support syslog logging for logs generated by CHIP SDK
---
 src/platform/Linux/BUILD.gn    | 9 +++++++++
 src/platform/Linux/Logging.cpp | 8 ++++++++
 2 files changed, 17 insertions(+)

diff --git a/src/platform/Linux/BUILD.gn b/src/platform/Linux/BUILD.gn
index 5c7516bc56..473a183ddc 100644
--- a/src/platform/Linux/BUILD.gn
+++ b/src/platform/Linux/BUILD.gn
@@ -21,6 +21,11 @@ import("${chip_root}/src/platform/device.gni")
 
 assert(chip_device_platform == "linux")
 
+declare_args() {
+  # Support syslog along instead of stdout(printf)
+  enable_syslog = true
+}
+
 if (chip_enable_openthread) {
   import("//build_overrides/openthread.gni")
   import("//build_overrides/ot_br_posix.gni")
@@ -33,6 +38,10 @@ if (chip_mdns != "none") {
 }
 
 static_library("Linux") {
+  if(enable_syslog) {
+    print("### enable syslog logging ###")
+    defines = [ "USE_SYSLOG=1" ]
+  }
   sources = [
     "../DeviceSafeQueue.cpp",
     "../DeviceSafeQueue.h",
diff --git a/src/platform/Linux/Logging.cpp b/src/platform/Linux/Logging.cpp
index b5a15f5bb3..923c03b116 100644
--- a/src/platform/Linux/Logging.cpp
+++ b/src/platform/Linux/Logging.cpp
@@ -8,6 +8,10 @@
 #include <sys/time.h>
 #include <unistd.h>
 
+#ifdef USE_SYSLOG
+#include <syslog.h>
+#endif
+
 namespace chip {
 namespace DeviceLayer {
 
@@ -35,11 +39,15 @@ void LogV(const char * module, uint8_t category, const char * msg, va_list v)
     // indicate the error occurred during getting time.
     gettimeofday(&tv, nullptr);
 
+#ifdef USE_SYSLOG
+    vsyslog(category, msg, v);
+#else
     printf("[%" PRIu64 ".%06" PRIu64 "][%lld:%lld] CHIP:%s: ", static_cast<uint64_t>(tv.tv_sec), static_cast<uint64_t>(tv.tv_usec),
            static_cast<long long>(syscall(SYS_getpid)), static_cast<long long>(syscall(SYS_gettid)), module);
     vprintf(msg, v);
     printf("\n");
     fflush(stdout);
+#endif
 
     // Let the application know that a log message has been emitted.
     DeviceLayer::OnLogOutput();
-- 
2.25.1

