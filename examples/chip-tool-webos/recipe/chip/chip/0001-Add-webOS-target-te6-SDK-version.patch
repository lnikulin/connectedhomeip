From da5806c403403ba0da48c54a3aaf57245cc723a3 Mon Sep 17 00:00:00 2001
From: "sungmok.shin" <sungmok.shin@lge.com>
Date: Fri, 27 Aug 2021 15:06:16 +0900
Subject: [PATCH] Add webOS target (0818 SDK version)

---
 build/config/BUILDCONFIG.gn               | 12 ++++++++
 build/config/linux/avahi-client.pc        |  9 ++++++
 build/config/linux/pkg-config.py          |  9 ++++++
 build/config/target.gni                   | 16 ++++++++++
 build/toolchain/webos/BUILD.gn            | 26 ++++++++++++++++
 build/toolchain/webos/webos_toolchain.gni | 37 +++++++++++++++++++++++
 examples/chip-tool/BUILD.gn               |  1 +
 src/crypto/crypto.gni                     |  2 +-
 8 files changed, 111 insertions(+), 1 deletion(-)
 create mode 100644 build/config/linux/avahi-client.pc
 create mode 100644 build/toolchain/webos/BUILD.gn
 create mode 100644 build/toolchain/webos/webos_toolchain.gni

diff --git a/build/config/BUILDCONFIG.gn b/build/config/BUILDCONFIG.gn
index 2592b62be5..b273b4d969 100644
--- a/build/config/BUILDCONFIG.gn
+++ b/build/config/BUILDCONFIG.gn
@@ -32,6 +32,11 @@ if (current_os == "") {
   current_os = target_os
 }
 
+#[webos] if target_os is webos, set current_os as linux.
+if(target_os == "webos") {
+  current_os = "linux"
+}
+
 _build_overrides = {
   import("//build_overrides/build.gni")
 }
@@ -99,6 +104,13 @@ if (_chip_defaults.custom_toolchain != "") {
 } else if (target_os == "tizen") {
   _default_toolchain =
       "${_build_overrides.build_root}/toolchain/tizen:tizen_${target_cpu}"
+} else if (target_os == "webos") {
+  if (target_cpu == "arm" || target_cpu == "arm64") {
+    print ("target_os = webos / target_cpu = ${target_cpu}")
+    _default_toolchain = "//build/toolchain/webos"
+  }  else {
+    assert (false, "Unsupported target_cpu: ${current_cpu}. Shall be arm for webOS")
+  }
 } else {
   assert(false, "No toolchain specified, please specify custom_toolchain")
 }
diff --git a/build/config/linux/avahi-client.pc b/build/config/linux/avahi-client.pc
new file mode 100644
index 0000000000..68a0970aed
--- /dev/null
+++ b/build/config/linux/avahi-client.pc
@@ -0,0 +1,9 @@
+prefix=@prefix@
+exec_prefix=${prefix}
+libdir=@libdir@
+includedir=${prefix}/include
+Name: avahi-client
+Description: Avahi Multicast DNS Responder (Client Support)
+Version: @PACKAGE_VERSION@
+Libs: -L${libdir} -lavahi-common -lavahi-client
+Cflags: -D_REENTRANT -I${includedir}
diff --git a/build/config/linux/pkg-config.py b/build/config/linux/pkg-config.py
index 510a082705..1b54ce3ae1 100755
--- a/build/config/linux/pkg-config.py
+++ b/build/config/linux/pkg-config.py
@@ -78,6 +78,12 @@ def SetConfigPath(options):
     sysroot = options.sysroot
     assert sysroot
 
+    # Compute the library path name based on the architecture.
+    arch = options.arch
+    #if sysroot and not arch:
+    #  print("You must specify an architecture via -a if using a sysroot.")
+    #  sys.exit(1)
+    #
     libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
     libdir += ':' + sysroot + '/usr/share/pkgconfig'
     os.environ['PKG_CONFIG_LIBDIR'] = libdir
@@ -143,6 +149,8 @@ def main():
                       dest='version_as_components')
     (options, args) = parser.parse_args()
 
+    options.sysroot = os.environ['PKG_CONFIG_SYSROOT_DIR']
+
     # Make a list of regular expressions to strip out.
     strip_out = []
     if options.strip_out != None:
@@ -154,6 +162,7 @@ def main():
         if options.debug:
             sys.stderr.write('PKG_CONFIG_LIBDIR=%s\n' % libdir)
         prefix = GetPkgConfigPrefixToStrip(options, args)
+
     else:
         prefix = ''
 
diff --git a/build/config/target.gni b/build/config/target.gni
index c1bf0b765d..c1a67d0843 100644
--- a/build/config/target.gni
+++ b/build/config/target.gni
@@ -19,4 +19,20 @@ declare_args() {
   target_cflags_cc = []
   target_cflags_c = []
   target_ldflags = []
+  sysroot_webos = ""
 }
+
+#[webos] build for webos flag [START]
+if(target_os == "webos") {
+  if(target_cpu == "arm" ||  target_cpu == "arm64") {
+    print("(target.gni) include webos/arm flag")
+    target_defines += []
+    target_cflags += [
+      "--sysroot=" + sysroot_webos
+    ]
+    target_cflags_cc += []
+    target_cflags_c += []
+    target_ldflags += ["--sysroot=" + sysroot_webos]
+  }
+}
+#[webos] build for webos flag [END]
diff --git a/build/toolchain/webos/BUILD.gn b/build/toolchain/webos/BUILD.gn
new file mode 100644
index 0000000000..08cbd87f5e
--- /dev/null
+++ b/build/toolchain/webos/BUILD.gn
@@ -0,0 +1,26 @@
+# Copyright 2020 The Pigweed Authors
+# Copyright (c) 2020 Project CHIP Authors
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+import("webos_toolchain.gni")
+
+print ("Hello ################## ")
+print ("111" + target_os)
+
+webos_toolchain("webos") {
+  toolchain_args = {
+    target_os = "linux"
+    target_cpu = "${current_cpu}"
+  }
+}
diff --git a/build/toolchain/webos/webos_toolchain.gni b/build/toolchain/webos/webos_toolchain.gni
new file mode 100644
index 0000000000..e1c603f710
--- /dev/null
+++ b/build/toolchain/webos/webos_toolchain.gni
@@ -0,0 +1,37 @@
+# Copyright (c) 2020 Project CHIP Authors
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+declare_args() {
+  cc_webos = ""
+  cxx_webos = ""
+  ar_webos = ""
+  ld_webos = ""
+}
+
+import("//build/toolchain/gcc_toolchain.gni")
+
+template("webos_toolchain") {
+  print("WebOS_ToolChian")
+  gcc_toolchain(target_name) {
+    ar = ar_webos
+    cc = cc_webos + "  -O2 -Wno-format-security -Wno-error -Wno-cpp"
+    cxx = cxx_webos + " -O2 -Wno-format-security -Wno-error -Wno-cpp"
+    toolchain_args = {
+      current_cpu = "${current_cpu}"
+      current_os = invoker.current_os
+      is_clang = false
+      forward_variables_from(invoker.toolchain_args, "*")
+    }
+  }
+}
diff --git a/examples/chip-tool/BUILD.gn b/examples/chip-tool/BUILD.gn
index 7f5a419fe7..c0c88735b4 100644
--- a/examples/chip-tool/BUILD.gn
+++ b/examples/chip-tool/BUILD.gn
@@ -52,6 +52,7 @@ executable("chip-tool") {
     "${chip_root}/src/lib",
     "${chip_root}/src/platform",
     "${chip_root}/third_party/inipp",
+    "${chip_root}/src/app/server",
   ]
 
   cflags = [ "-Wconversion" ]
diff --git a/src/crypto/crypto.gni b/src/crypto/crypto.gni
index 26722677df..ef8ae4397e 100644
--- a/src/crypto/crypto.gni
+++ b/src/crypto/crypto.gni
@@ -23,7 +23,7 @@ if (chip_crypto == "") {
       current_os == "zephyr" || current_os == "mbed") {
     chip_crypto = "mbedtls"
   } else {
-    chip_crypto = "openssl"
+    chip_crypto = "mbedtls"
   }
 }
 
-- 
2.17.1

